{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/image.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","country","active","cardDetails","style","styles","infected","text","value","bottomText","className","Grid","container","spacing","justify","map","detail","index","item","component","Card","xs","md","cx","card","key","margin","padding","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","toLocaleTimeString","url","fetchData","a","endUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","hoverBackgroundColor","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","font30","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84044e3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2xMIV\",\"card\":\"Cards_card__XXWNP\",\"infected\":\"Cards_infected__2CO1_\",\"recovered\":\"Cards_recovered__3w5q-\",\"deaths\":\"Cards_deaths__ev4Kd\",\"active\":\"Cards_active__3pyBo\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\"\r\nimport styles from \"./Cards.module.css\"\r\nimport CountUp from \"react-countup\"\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({\r\n    data: { confirmed, recovered, deaths, lastUpdate },\r\n    country,\r\n}) => {\r\n    if (!confirmed) {\r\n        return \"Loading...\"\r\n    }\r\n    const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"]\r\n    let cardDetails = [\r\n        {\r\n            style: styles.infected,\r\n            text: \"Infected\",\r\n            value: confirmed.value,\r\n            bottomText: \"Number of infected cases from COVID-19\",\r\n        },\r\n        {\r\n            style: styles.recovered,\r\n            text: \"Recovered\",\r\n            value: recovered.value,\r\n            bottomText: \"Number of recovered cases from COVID-19\",\r\n        },\r\n        {\r\n            style: styles.deaths,\r\n            text: \"Deaths\",\r\n            value: deaths.value,\r\n            bottomText: \"Number of deaths from COVID-19\",\r\n        },\r\n        {\r\n            style: styles.active,\r\n            text: \"Active\",\r\n            value: active,\r\n            bottomText: \"Number of active COVID-19 cases\",\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"styles.container\">\r\n            <Grid container spacing={3} justify=\"center\">\r\n                {cardDetails.map((detail, index) => (\r\n                    <Grid\r\n                        item\r\n                        component={Card}\r\n                        xs={12}\r\n                        md={2}\r\n                        className={cx(styles.card, detail.style)}\r\n                        key={index}\r\n                        style={{ margin: \"0px 23.675px\", padding: \"12px\" }}>\r\n                        <CardContent>\r\n                            <Typography color=\"textPrimary\" gutterBottom>\r\n                                <b>{detail.text}</b>\r\n                            </Typography>\r\n                            <Typography variant=\"h5\">\r\n                                <CountUp\r\n                                    start={0}\r\n                                    end={detail.value}\r\n                                    duration={2}\r\n                                    separator=\",\"\r\n                                />\r\n                            </Typography>\r\n                            <Typography color=\"textPrimary\">Last updated at: </Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\">\r\n                                {new Date(lastUpdate).toDateString()}\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\">\r\n                                {new Date(lastUpdate).toLocaleTimeString()}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                                {detail.bottomText}\r\n                            </Typography>\r\n                            <Typography color=\"textPrimary\">\r\n                                {country}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from \"axios\"\r\n\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) => {\r\n    let endUrl = url;\r\n    if (country) {\r\n        endUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {\r\n            data: { confirmed, recovered, deaths, lastUpdate },\r\n        } = await axios.get(endUrl);\r\n\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {\r\n            data: {countries},\r\n        } = await axios.get(`${url}/countries`)\r\n        return countries.map((country)=>country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths, }, country }) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchApi()\r\n    }, [])\r\n\r\n    const lineChart = dailyData.length ? (\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: \"Deaths\",\r\n                        borderColor: \"red\",\r\n                        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n                        fill: true,\r\n                    },\r\n                ],\r\n            }}\r\n        />\r\n    ) : null\r\n\r\n    const barChart = confirmed ? (\r\n        <Bar\r\n            data={{\r\n                labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"People\",\r\n                        backgroundColor: [\r\n                            \"rgba(0,0,255,0.5)\",\r\n                            \"rgba(0,255,0,0.5)\",\r\n                            \"rgba(255,0,0,0.5)\",\r\n                            \"rgba(242,234,0,0.5)\",\r\n                        ],\r\n                        hoverBackgroundColor: [\r\n                            \"rgba(0, 77, 153)\",\r\n                            \"rgba(30, 102, 49)\",\r\n                            \"rgba(255, 51, 51)\",\r\n                            \"rgba(204, 153, 0)\",\r\n                        ],\r\n                        data: [\r\n                            confirmed.value,\r\n                            recovered.value,\r\n                            deaths.value,\r\n                            confirmed.value - (recovered.value + deaths.value),\r\n                        ],\r\n                    },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: `Current state of ${country}`,\r\n            }}\r\n        />\r\n    ) : null\r\n\r\n    return (\r\n        <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchApi()\r\n    }, [setFetchedCountries])\r\n\r\n    return (\r\n        <FormControl\r\n            className={styles.formControl}>\r\n            <NativeSelect\r\n                defaultValue=\"\"\r\n                onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, key) => (\r\n                    <option key={key} value={country}>\r\n                        {country}\r\n                    </option>\r\n                ))}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react'\r\nimport Cards from './Components/Cards/Cards'\r\nimport Chart from './Components/Chart/Chart'\r\nimport CountryPicker from './Components/CountryPicker/CountryPicker'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\nimport coronaImage from \"./images/image.jpg\"\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n        this.setState({ data: fetchedData })\r\n    }\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({ data: fetchedData, country: country })\r\n    }\r\n    render() {\r\n        const { data, country } = this.state\r\n        return (\r\n            <div className = { styles.container } >\r\n            <img className = { styles.image }\r\n            src = { coronaImage }\r\n            alt = \"COVID-19\"\r\n            />\r\n            <br/>\r\n            <text >\r\n            <h1> Global and country - wise cases of COVID - 19 </h1>\r\n            </text >\r\n            <br />\r\n            <text className={styles.font30}>Select country from below</text>\r\n            <br />\r\n            <br />\r\n            <Cards\r\n            data = { data }\r\n            country = { country }\r\n            />\r\n            <CountryPicker handleCountryChange = { this.handleCountryChange }/>\r\n            <Chart\r\n            data = { data }\r\n            country = { country }\r\n            />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__AFStO\",\"image\":\"App_image__2cxOa\",\"font30\":\"App_font30__3mbWg\",\"img\":\"App_img__1pU1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3SQuH\",\"image\":\"Chart_image__3hPPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__5pEmL\"};","module.exports = __webpack_public_path__ + \"static/media/image.310e8b53.jpg\";"],"sourceRoot":""}